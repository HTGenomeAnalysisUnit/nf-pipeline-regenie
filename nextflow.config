cleanup = true

manifest {
    name                                  = 'nf-highspeed-gwas'
    version                               = '0.1'
    description                           = 'Regenie GWAS at high speed'
    author                                = 'Edoardo Giacopuzzi'
    homePage                              = 'https://gitlab.fht.org/genome-analysis-unit/nf-pipeline-regenie'
    mainScript                            = 'main.nf'
    nextflowVersion                       = '!>=21.04.0'
}

// Global default params, used in configs
params {
    //Required inputs
    project                               = null
    genotypes_array                       = null
    genotypes_imputed                     = null
    genotypes_build                       = null
    genotypes_imputed_format              = null
    phenotypes_filename                   = null
    phenotypes_columns                    = null
    phenotypes_binary_trait               = null
    regenie_test                          = null
    step1_n_chunks                        = 100
    step2_split_by                        = 'chunk'
    step2_chunk_size                      = 10000

    //Optional inputs
    outdir                                = null
    project_date                          = "`date`"
    covariates_filename                   = 'NO_COV_FILE'
    covariates_columns                    = ''
    phenotypes_delete_missings            = false
    imputed_snplist                       = false
    db                                    = false
    genes                                 = false
    save_snplist                          = true
    save_bgen_index                       = true
    save_step2_logs                       = false

    //SNP_PRUNING process
    prune_enabled                         = false
    prune_maf                             = 0.01
    prune_window_kbsize                   = 1000
    prune_step_size                       = 100
    prune_r2_threshold                    = 0.9

    //QC_FILTER process
    qc_maf                                = '0.01'
    qc_mac                                = '100'
    qc_geno                               = '0.1'
    qc_hwe                                = '1e-15'
    qc_mind                               = '0.1'

    //REGENIE_STEP1 + REGENIE_STEP_2 process
    regenie_bsize_step1                   = 500
    regenie_bsize_step2                   = 400
    regenie_sample_file                   = 'NO_SAMPLE_FILE'
    regenie_premade_predictions           = false
    save_step1_predictions                = false
    regenie_min_imputation_score          = 0.00
    regenie_min_mac                       = 5
    regenie_range                         = ''
    regenie_firth                         = true
    regenie_firth_approx                  = true
    regenie_force_step1                   = false
    regenie_ref_first                     = false
    step1_use_loocv                       = false
    step1_niter                           = 30
    
    //FILTER_RESULTS step
    annotation_min_log10p                 = 5
    annotation_interval_kb                = 25

    //REPORT process
    plot_ylimit                           = 0
    manhattan_annotation_enabled          = true
}

//PIPELINE TRACE FILES
report_file = "${launchDir}/gwas-pipeline_report.html"
timeline_file = "${launchDir}/gwas-pipeline_timeline.html"

report {
    enabled = true
    file = "${report_file}"
}

timeline {
    enabled = true
    file = "${timeline_file}"
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

process.container = 'edg1983/gwas-nf-pipeline:v0.1'

profiles {
    debug { process.beforeScript          = 'echo $HOSTNAME' }

    test  {
         includeConfig 'conf/test.config'
    }

    slurm {
        workDir = "/scratch/$USER/nf-gwas-work"
        executor {
            name = 'slurm'
            queueSize = 500
            pollInterval = '30 sec'
            queue = 'cpuq'
        }
        errorStrategy = {task.exitStatus == 143 ? 'retry' : 'terminate'}
        maxErrors = '-1'
        maxRetries = 3
        singularity.cacheDir              = '/project/alfredo/singularity/'
        singularity.enabled               = true
        singularity.autoMounts            = true
        docker.enabled                    = false
    }
}
